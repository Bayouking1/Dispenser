{"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"playerId = unit.getMasterPlayerId()\nplayerName = system.getPlayerName(playerId)\nweightLeave = slot2.getItemsMass()\ntimeLeave = system.getTime()","filter":{"args":[{"variable":"*"}],"signature":"leave(id)","slotKey":"0"},"key":"0"},{"code":"--[[\nslot1: Detector\nslot2: Container\nslot3: Databank\nslot4: Screen\n\n]]--\nsystem.print(\"enter:\"..weightEnter..\" leave:\"..weightLeave)\n\nif weightEnter > weightLeave then \n    slot3.setStringValue(timeLeave,\n        playerId .. \",\" .. \n        playerName ..  \",\" .. \n        timeEnter.. \",\" .. \n        timeLeave .. \",\" .. \n        weightEnter .. \",\".. \n        weightLeave  )\nend\n\nlocal weightItem = 27.19 --export: Put in the weight of the item you want to keep track off\nlocal itemName = \"Stain Brown Pattern Wood\" --export: Name of the item\n-- function to calculate time from seconds, TODO still need to do date\nfunction SecondsToClock(seconds)\n  local seconds = tonumber(seconds)\n\n  if seconds <= 0 then\n    return \"00:00:00\";\n  else  \n    hours = string.format(\"%02.f\", math.floor(seconds/3600));\n    mins = string.format(\"%02.f\", math.floor(seconds/60 - (hours*60)));\n    secs = string.format(\"%02.f\", math.floor(seconds - hours*3600 - mins *60));\n    return hours..\":\"..mins..\":\"..secs\n  end\nend\n\n\n--strip first and last letter from the getKeys(), it returns it as a string but still keeps the brackets\n--array = string.sub(slot1.getKeys(),2,-2)\n\nlist = {}\n--cut the string at the comma and remove bracket from the getKeys\nfor i in string.gmatch(string.sub(slot3.getKeys(),2,-2), \"[^,]+\") do\n    table.insert(list, string.sub(i,2,-2))\nend\n\nlists = {}\n-- Cut the 6 things i need from the string out of the databank\nfor i=1, #list do \n    lists[i] = {}\n    k = slot3.getStringValue(list[i])\n    for j in string.gmatch(k, \"[^,]+\") do \n       table.insert(lists[i], j)\n    end\nend\n\nhtmlTable = \"\"\n\nfor i=1, #lists do\n    htmlTable = htmlTable .. \"<tr> <th>\" .. lists[i][1] .. \"</th><th>\" .. lists[i][2] .. \"</th><th>\".. SecondsToClock(string.sub(lists[i][3],6)) .. \" / \" .. SecondsToClock(string.sub(lists[i][4],6)) .. \"</th><th>\".. math.floor(lists[i][5] / weightItem) .. \" / \" .. math.floor(lists[i][6] / weightItem) ..  \"</th></tr>\"\t\nend\n\n\nhtml = [[\n<div class=\"bootstrap\">\n<h1 style=\"\n\tfont-size: 10px;\n\">Keep track of stuff</h1>\n<table \nstyle=\"\n\ttext-align: left;\n\tmargin-top: 10px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\twidth: 95%;\n\tfont-size: 1em;\n\t\">\n\t</br>\n\t<tr\n\tstyle=\"\n\tcolor:green;\n\tfont-size: 1.5em;\n\t\">\n\t<th>ID</th>\n\t<th>Name</th>\n\t<th>Enter / Left</th>\n\t<th>]].. itemName ..[[</th>\n\t</tr>\n\t]]..htmlTable..[[\n\t</table>\n\t</div>\n]]\n\nslot4.setHTML(html)","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"1"},{"code":"timeEnter = system.getTime()\nweightEnter = slot2.getItemsMass() \nslot4.activate()\n\n","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"2"}],"methods":[],"events":[]}
